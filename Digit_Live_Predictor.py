# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rEH5HjfXpX8LBGPsDZojeeS46udNCQZN

#Importing the Libraries
"""

import pyscreenshot as ImageGrab
import time
import joblib
import cv2

"""#To Load the rbf model"""

model=joblib.load("svm_6label_rbf")
!unzip temp.7z

"""#To create a image folder"""

image_folder="temp.7z"
fout=open("testing_x","w+")

"""#To use ImageGraber"""

for i in range(0,100):
  img=ImageGrab.grab(bbox=(80,80,208,208))#X1,Y1,X2,Y2
  img.save(image_folder+"test_orig.png")
  im=cv2.imread(images_folder+"test_orig.png")
  im_gray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
  im_gray=cv2.GaussianBlur(im_gray,(15,15),0)

  #Threshold The Image
  ret,im_th=cv2.threshold(im_gray,100,255,cv2.THRESH_BINARY)
  roi=cv2.resize(im_th,(28,28),interpolation=cv2.INTER_AREA)
  cv2.imwrite(image_folder+"segmented.png",roi)
  rows,cols=roi.shape
  X=[]

  #Add Pixel one-by-one into data array
  for i in range(rows):
    for j in range(cols):
      k=roi[i,j]
      if k>100:
        k=1
      else:
        k=0
      X.append(k)
  
  #Scaling=MinMaxScaler(feature_range=(-1,1)).fit([X])
  #X=Scaling.transform([X])
  fout.write(str(X))
  predictions=model.predict([X])
  print("predictions:  ",predictions[0])
  cv2.putText(im,"Prediction is: ",str(predictions[0]),(20,20),0,0.8,(0,255,0),2,cv2.LINE_AA)

  #cv2.startWindowThread()
  cv2.namedWindow("Result")
  cv2.imshow("Result",im)
  cv2.waitKey(10000)
  #time.sleep(4)